- name: Prepare random number
  set_fact:
    rpfx: "{{ 1000 | random }}{{ resource_group | hash('md5') | truncate(7, True, '') }}"
  run_once: yes

- name: Create PostgreSQL Server
  azure_rm_postgresqlserver:
    resource_group: "{{ resource_group }}"
    name: postgresqlsrv{{ rpfx }}
    sku:
      name: PGSQLS100
      tier: basic
    location: westus
    enforce_ssl: True
    admin_username: zimxyz
    admin_password: Testpasswordxyz12!
- name: Create PostgreSQL Server
  azure_rm_postgresqlserver:
    resource_group: "{{ resource_group }}"
    name: postgresqlsrv{{ rpfx }}second
    sku:
      name: PGSQLS100
      tier: basic
    location: westus
    enforce_ssl: True
    admin_username: zimxyz
    admin_password: Testpasswordxyz12!

- name: Gather facts MySQL Server
  azure_rm_postgresqlserver_facts:
    resource_group: "{{ resource_group }}"
    server_name: postgresqlsrv{{ rpfx }}
  register: output
- name: Assert that facts are returned
  assert:
    that:
      - output.changed == False
      - output.servers.postgresqlsrv{{ rpfx }}.id != None

- name: Gather facts MySQL Server
  azure_rm_postgresqlserver_facts:
    resource_group: "{{ resource_group }}"
  register: output
- name: Assert that facts are returned
  assert:
    that:
      - output.changed == False
      - output.servers.postgresqlsrv{{ rpfx }}.id != None
      - output.servers.postgresqlsrv{{ rpfx }}second.id != None

- name: Delete instance of PostgreSQL Server
  azure_rm_postgresqlserver:
    resource_group: "{{ resource_group }}"
    name: postgresqlsrv{{ rpfx }}
    state: absent
- name: Delete instance of PostgreSQL Server
  azure_rm_postgresqlserver:
    resource_group: "{{ resource_group }}"
    name: postgresqlsrv{{ rpfx }}second
    state: absent

- name: Gather facts MySQL Server
  azure_rm_postgresqlserver_facts:
    resource_group: "{{ resource_group }}"
    server_name: postgresqlsrv{{ rpfx }}
  register: output
- name: Assert that empty dictionary was returned
  assert:
    that:
      - output.changed == False
      - "'postgresqlsrv{{ rpfx }}' not in output.servers"
      - "'postgresqlsrv{{ rpfx }}second' not in output.servers"

- name: Gather facts MySQL Server
  azure_rm_postgresqlserver_facts:
    resource_group: "{{ resource_group }}"
  register: output
- name: Assert that empty dictionary was returned
  assert:
    that:
      - output.changed == False
      - "'postgresqlsrv{{ rpfx }}' not in output.servers"
      - "'postgresqlsrv{{ rpfx }}second' not in output.servers"

