- name: Prepare random number
  set_fact:
    rpfx: "{{ 1000 | random }}{{ resource_group | hash('md5') | truncate(7, True, '') }}"
  run_once: yes

- name: Create sample container instance
  azure_rm_containerinstance:
    resource_group: "{{ resource_group }}"
    name: aci{{ rpfx }}
    os_type: linux
    ip_address: public
    location: westus
    ports:
      - 80
    containers:
      - name: mycontainer1
        image: httpd
        memory: 1.5
        ports:
          - 80
          - 81
      - name: mycontainer2
        image: httpd
        memory: 1.5
- name: Create sample container instance
  azure_rm_containerinstance:
    resource_group: "{{ resource_group }}"
    name: aci{{ rpfx }}second
    os_type: linux
    ip_address: public
    location: westus
    ports:
      - 80
    containers:
      - name: mycontainer1
        image: httpd
        memory: 1.5
        ports:
          - 80
          - 81
      - name: mycontainer2
        image: httpd
        memory: 1.5

- name: Gather facts Container Group
  azure_rm_containerinstance_facts:
    resource_group: "{{ resource_group }}"
    container_group_name: aci{{ rpfx }}
  register: output
- name: Assert that facts are returned
  assert:
    that:
      - output.changed == False
      - output.container_groups.aci{{ rpfx }}.id != None
      - output.container_groups.aci{{ rpfx }}.name != None
      - output.container_groups.aci{{ rpfx }}.type != None
      - output.container_groups.aci{{ rpfx }}.location != None

- name: Gather facts Container Group
  azure_rm_containerinstance_facts:
    resource_group: "{{ resource_group }}"
  register: output
- name: Assert that facts are returned
  assert:
    that:
      - output.changed == False
      - output.container_groups.aci{{ rpfx }}.id != None
      - output.container_groups.aci{{ rpfx }}.name != None
      - output.container_groups.aci{{ rpfx }}.type != None
      - output.container_groups.aci{{ rpfx }}.location != None
      - output.container_groups.aci{{ rpfx }}second.id != None
      - output.container_groups.aci{{ rpfx }}second.name != None
      - output.container_groups.aci{{ rpfx }}second.type != None
      - output.container_groups.aci{{ rpfx }}second.location != None

- name: Delete sample container instance
  azure_rm_containerinstance:
    resource_group: "{{ resource_group }}"
    name: aci{{ rpfx }}
    os_type: linux
    ip_address: public
    location: westus
    ports:
      - 80
    containers:
      - name: mycontainer1
        image: httpd
        memory: 1.5
        ports:
          - 80
          - 81
      - name: mycontainer2
        image: httpd
        memory: 1.5
    state: absent
- name: Delete sample container instance
  azure_rm_containerinstance:
    resource_group: "{{ resource_group }}"
    name: aci{{ rpfx }}second
    os_type: linux
    ip_address: public
    location: westus
    ports:
      - 80
    containers:
      - name: mycontainer1
        image: httpd
        memory: 1.5
        ports:
          - 80
          - 81
      - name: mycontainer2
        image: httpd
        memory: 1.5
    state: absent

- name: Gather facts Container Group
  azure_rm_containerinstance_facts:
    resource_group: "{{ resource_group }}"
    container_group_name: aci{{ rpfx }}
  register: output
- name: Assert that empty dictionary was returned
  assert:
    that:
      - output.changed == False
      - "'aci{{ rpfx }}' not in output.container_groups"
      - "'aci{{ rpfx }}second' not in output.container_groups"

- name: Gather facts Container Group
  azure_rm_containerinstance_facts:
    resource_group: "{{ resource_group }}"
  register: output
- name: Assert that empty dictionary was returned
  assert:
    that:
      - output.changed == False
      - "'aci{{ rpfx }}' not in output.container_groups"
      - "'aci{{ rpfx }}second' not in output.container_groups"

