- name: Prepare random number
  set_fact:
    rpfx: "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"
  run_once: yes

- name: Create instance of Key Vault
  azure_rm_keyvault:
    resource_group: "{{ resource_group }}"
    vault_name: "vault{{ rpfx }}"
    enabled_for_deployment: yes
    sku:
      name: standard
      family: A
    access_policies:
      - object_id: "{{ azure_client_id }}"
        keys:
          - get
          - list
          - update
          - create
          - import
          - delete
          - recover
          - backup
          - restore
        secrets:
          - get
          - list
          - set
          - delete
          - recover
          - backup
          - restore

- name: Gather facts Vault
  azure_rm_keyvault_facts:
    resource_group: "{{ resource_group }}"
  register: output
- name: Assert that facts are returned
  assert:
    that:
      - output.changed == False
      - output.vaults.vault{{ rpfx }}.id != None

- name: Debug facts
  debug:
    msg: "RESPONSE: {{ output.vaults }}"
- name: Debug facts -- details
  debug:
    msg: "TENANT: {{ azure_tenant[0:10] }}----{{ azure_tenant[10:100] }}"
- name: Debug facts -- details
  debug:
    msg: "CLIENT ID: {{ azure_client_id[0:10] }}----{{ azure_client_id[10:100] }}"

- name: Gather facts Vault
  azure_rm_keyvault_facts:
    resource_group: "{{ resource_group }}"
    vault_name: vault{{ rpfx }}
  register: output
- name: Assert that facts are returned
  assert:
    that:
      - output.changed == False
      - output.vaults.vault{{ rpfx }} != None
