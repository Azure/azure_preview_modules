- name: Prepare random number
  set_fact:
    rpfx: "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"
  run_once: yes

- name: Create instance of MySQL Server -- check mode
  azure_rm_mysqlserver:
    resource_group: "{{ resource_group }}"
    name: mysqlsrv{{ rpfx }}
    sku:
      name: GP_Gen4_2
      tier: GeneralPurpose
    location: westus
    storage_mb: 51200
    version: 5.6
    enforce_ssl: True
    admin_username: zimxyz
    admin_password: Testpasswordxyz12!
  check_mode: yes
  register: output
- name: Assert the resource instance is well created
  assert:
    that:
      - output.changed

- name: Create instance of MySQL Server
  azure_rm_mysqlserver:
    resource_group: "{{ resource_group }}"
    name: mysqlsrv{{ rpfx }}
    sku:
      name: GP_Gen4_2
      tier: GeneralPurpose
    location: westus
    storage_mb: 51200
    version: 5.6
    enforce_ssl: True
    admin_username: zimxyz
    admin_password: Testpasswordxyz12!
  register: output
- name: Assert the resource instance is well created
  assert:
    that:
      - output.changed
      - output.state == 'Ready'

- name: Create again instance of MySQL Server
  azure_rm_mysqlserver:
    resource_group: "{{ resource_group }}"
    name: mysqlsrv{{ rpfx }}
    sku:
      name: GP_Gen4_2
      tier: GeneralPurpose
    location: westus
    storage_mb: 51200
    version: 5.6
    enforce_ssl: True
    admin_username: zimxyz
    admin_password: Testpasswordxyz12!
  register: output
- name: Assert the state has not changed
  assert:
    that:
      - output.changed == false
      - output.state == 'Ready'

- name: Create second instance of MySQL Server
  azure_rm_mysqlserver:
    resource_group: "{{ resource_group }}"
    name: mysqlsrv{{ rpfx }}second
    sku:
      name: GP_Gen4_2
      tier: GeneralPurpose
    location: westus
    storage_mb: 51200
    version: 5.6
    enforce_ssl: True
    admin_username: zimxyz
    admin_password: Testpasswordxyz12!

- name: Gather facts MySQL Server
  azure_rm_mysqlserver_facts:
    resource_group: "{{ resource_group }}"
    name: mysqlsrv{{ rpfx }}
  register: output 

- name: Assert that facts are returned
  assert:
    that:
      - output.changed == False
      - output.servers[0]['id'] != None
      - output.servers[0]['name'] != None
      - output.servers[0]['location'] != None
      - output.servers[0]['sku']['name'] != None
      - output.servers[0]['sku']['tier'] != None
      - output.servers[0]['sku']['capacity'] != None
      - output.servers[0]['version'] != None
      - output.servers[0]['user_visible_state'] != None
      - output.servers[0]['fully_qualified_domain_name'] != None

- name: Gather facts MySQL Server
  azure_rm_mysqlserver_facts:
    resource_group: "{{ resource_group }}"
  register: output
- name: Assert that facts are returned
  assert:
    that:
      - output.changed == False
      - output.servers[0]['id'] != None
      - output.servers[0]['name'] != None
      - output.servers[0]['location'] != None
      - output.servers[0]['sku']['name'] != None
      - output.servers[0]['sku']['tier'] != None
      - output.servers[0]['sku']['capacity'] != None
      - output.servers[0]['version'] != None
      - output.servers[0]['user_visible_state'] != None
      - output.servers[0]['fully_qualified_domain_name'] != None
      - output.servers[1]['id'] != None
      - output.servers[1]['name'] != None
      - output.servers[1]['location'] != None
      - output.servers[1]['sku']['name'] != None
      - output.servers[1]['sku']['tier'] != None
      - output.servers[1]['sku']['capacity'] != None
      - output.servers[1]['version'] != None
      - output.servers[1]['user_visible_state'] != None
      - output.servers[1]['fully_qualified_domain_name'] != None

- name: Delete instance of MySQL Server -- check mode
  azure_rm_mysqlserver:
    resource_group: "{{ resource_group }}"
    name: mysqlsrv{{ rpfx }}
    state: absent
  check_mode: yes
  register: output
- name: Assert the state has changed
  assert:
    that:
      - output.changed

- name: Delete instance of MySQL Server
  azure_rm_mysqlserver:
    resource_group: "{{ resource_group }}"
    name: mysqlsrv{{ rpfx }}
    state: absent
  register: output
- name: Assert the state has changed
  assert:
    that:
      - output.changed

- name: Delete unexisting instance of MySQL Server
  azure_rm_mysqlserver:
    resource_group: "{{ resource_group }}"
    name: mysqlsrv{{ rpfx }}
    state: absent
  register: output
- name: Assert the state has changed
  assert:
    that:
      - output.changed == false
