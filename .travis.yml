language: python
python: '2.7'

branches:
  only:
    - master

env:
  global:
    - exit_code=0
    - number_per_job=2
    - message=()
    - ANSIBLE_VERSION=latest
    - max_retry_count=2
    #- ANSIBLE_VERSION=2.4.2.0
  matrix:
    - id=1
    - id=2
    - id=3
    - id=4
    - id=5
    - id=6
    - id=7
    - id=8
    - id=9
    - id=10
    - id=11
    - id=12
    - id=13
    - id=14
    - id=15
    - id=16
    - id=17
    - id=18
    - id=19
    - id=20
    - id=21
    - id=22
    - id=23
    - id=24
    - id=25
    - id=26
    - id=27
    - id=28
    - id=29
    - id=30

before_install:
  - sudo apt-get update -qq
  - mkdir ~/.azure
  - touch ~/.azure/credentials
  - printf "[default]\nsubscription_id=${subscriptionId}\nclient_id=${clientId}\nsecret=${secret}\ntenant=${tenant}" > ~/.azure/credentials
  - run_test(){
      file=$1;
      filename=${file##tests/integration/};
      test_name=${file##tests/integration/targets/};
      test_name=${test_name%%/tasks/main.yml};
      m=1;

      echo Run test $test_name from $filename;
      resource_group="asb-roletest-${test_name##azure_rm_}$(date +%s)";

      printf "{\"resource_group\":\"$resource_group\",\n\"test\":\"$filename\",\n\"resource_group_secondary\":\"$resource_group\",\n\"azure_object_id\":\"$AZURE_OBJECT_ID\"}" > ~/arg.json;
      cat ~/arg.json;

      while [ $m -le $max_retry_count ]; do
        echo Run test $m time;
      
        travis_wait 50 ansible-playbook tests/integration/main.yml;

        if [ $? -ne 0 ]; then
          echo test $test_name failed;          

          if [ $m -eq $max_retry_count ]; then
            message+=($test_name);
            export exit_code=1;
          fi;
          
          m=$[$m+1];
        else
          echo test $test_name passed;          
          break;
        fi;
        
      done;
      
    }


  - scan_test() {
      end=$((id * number_per_job));
      start=$((end - number_per_job));

      liststr=tests/integration/targets/azure_rm_*/tasks/main.yml;
      list=($liststr);

      echo start = $start, end = $end, list_lenth = ${#list[@]};

      for (( i = $start; i < $end; i++ )); do
        if [ "$i" -lt "${#list[@]}" ]; then
          run_test ${list[$i]};
        fi
      done;
    }

install:
  - if [ "$ANSIBLE_VERSION" = "latest" ]; then pip install ansible[azure]; else pip
    install ansible[azure]==$ANSIBLE_VERSION; fi
  - "{ echo '[defaults]'; echo 'roles_path = ../'; } >> ansible.cfg"
  - pip install -I -r ./files/requirements-azure.txt
  - pip  freeze

script:
  - scan_test
  - exit $exit_code

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
  email:
    - yuwzho@microsoft.com
    - zikalino@microsoft.com
    - yungez@microsoft.com
    - yaweiw@microsoft.com

